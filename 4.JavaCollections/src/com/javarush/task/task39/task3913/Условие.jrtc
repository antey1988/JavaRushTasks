taskKey="com.javarush.task.task39.task3913.big07"\n\nПарсер логов (7)

Теперь добавим поддержку дополнительного параметра запроса в наш QL.
Дополнительный параметр будет отвечать за диапазон дат, которые нас интересуют.
Пример запроса: get ip for user = "Eduard Petrovich Morozko" and date between
"11.12.2013 0:00:00" and "03.01.2014 23:59:59".
Ожидаемый результат: Set<String> с записями: 127.0.0.1 и 146.34.15.5.

Общий формат запроса:
get field1 for field2 = "value1" and date between "after" and "before"
Дополнительным параметром может быть только интервал дат, который нас интересует.

Поддержка старых форматов запросов должна сохраниться.


Требования:
1.	Вызов метода execute с параметром &quot;get ip for user = &quot;[any_user]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных IP адресов, с которых работал пользователь с именем [any_user] в период между датами [after] и [before].
2.	Вызов метода execute с параметром &quot;get ip for date = &quot;[any_date]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных IP адресов, события с которых произведены в указанное время [any_date] в период между датами [after] и [before].
3.	Вызов метода execute с параметром &quot;get ip for event = &quot;[any_event]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных IP адресов, у которых событие равно [any_event] в период между датами [after] и [before].
4.	Вызов метода execute с параметром &quot;get ip for status = &quot;[any_status]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных IP адресов, события с которых закончились со статусом [any_status] в период между датами [after] и [before].
5.	Вызов метода execute с параметром &quot;get user for ip = &quot;[any_ip]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных пользователей, которые работали с IP адреса [any_ip] в период между датами [after] и [before].
6.	Вызов метода execute с параметром &quot;get user for date = &quot;[any_date]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных пользователей, которые произвели любое действие в указанное время [any_date] в период между датами [after] и [before].
7.	Вызов метода execute с параметром &quot;get user for event = &quot;[any_event]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных пользователей, у которых событие равно [any_event] в период между датами [after] и [before].
8.	Вызов метода execute с параметром &quot;get user for status = &quot;[any_status]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных пользователей, у которых статус равен [any_status] в период между датами [after] и [before].
9.	Вызов метода execute с параметром &quot;get date for ip = &quot;[any_ip]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных дат, за которые с IP адреса [any_ip] произведено любое действие в период между датами [after] и [before].
10.	Вызов метода execute с параметром &quot;get date for user = &quot;[any_user]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных дат, за которые пользователь [any_user] произвел любое действие в период между датами [after] и [before].
11.	Вызов метода execute с параметром &quot;get date for event = &quot;[any_event]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных дат, за которые произошло событие равно [any_event] в период между датами [after] и [before].
12.	Вызов метода execute с параметром &quot;get date for status = &quot;[any_status]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных дат, за которые произошло любое событие со статусом [any_status] в период между датами [after] и [before].
13.	Вызов метода execute с параметром &quot;get event for ip = &quot;[any_ip]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных событий, которые произошли с IP адреса [any_ip] в период между датами [after] и [before].
14.	Вызов метода execute с параметром &quot;get event for user = &quot;[any_user]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных событий, которые произвел пользователь [any_user] в период между датами [after] и [before].
15.	Вызов метода execute с параметром &quot;get event for date = &quot;[any_date]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных событий, которые произошли во время [any_date] в период между датами [after] и [before].
16.	Вызов метода execute с параметром &quot;get event for status = &quot;[any_status]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных событий, которые завершены со статусом [any_status] в период между датами [after] и [before].
17.	Вызов метода execute с параметром &quot;get status for ip = &quot;[any_ip]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных статусов, которые произошли с IP адреса [any_ip] в период между датами [after] и [before].
18.	Вызов метода execute с параметром &quot;get status for user = &quot;[any_user]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных статусов, которые произвел пользователь [any_user] в период между датами [after] и [before].
19.	Вызов метода execute с параметром &quot;get status for date = &quot;[any_date]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных статусов, которые произошли во время [any_date] в период между датами [after] и [before].
20.	Вызов метода execute с параметром &quot;get status for event = &quot;[any_event]&quot; and date between &quot;[after]&quot; and &quot;[before]&quot;&quot; должен возвращать множество уникальных статусов, у которых событие равно [any_event] в период между датами [after] и [before].
21.	Поддержка формата запросов из задания 5 должна сохраниться.
22.	Поддержка формата запросов из задания 6 должна сохраниться.


Парсер логов (7)

Теперь добавим поддержку дополнительного параметра запроса в наш QL.
Дополнительный параметр будет отвечать за диапазон дат, которые нас интересуют.
Пример запроса: get ip for user = "Eduard Petrovich Morozko" and date between
"11.12.2013 0:00:00" and "03.01.2014 23:59:59".
Ожидаемый результат: Set<String> с записями: 127.0.0.1 и 146.34.15.5.

Общий формат запроса:
get field1 for field2 = "value1" and date between "after" and "before"
Дополнительным параметром может быть только интервал дат, который нас интересует.

Поддержка старых форматов запросов должна сохраниться.



Парсер логов (7)

Теперь добавим поддержку дополнительного параметра запроса в наш QL.
Дополнительный параметр будет отвечать за диапазон дат, которые нас интересуют.
Пример запроса: get ip for user = "Eduard Petrovich Morozko" and date between
"11.12.2013 0:00:00" and "03.01.2014 23:59:59".
Ожидаемый результат: Set<String> с записями: 127.0.0.1 и 146.34.15.5.

Общий формат запроса:
get field1 for field2 = "value1" and date between "after" and "before"
Дополнительным параметром может быть только интервал дат, который нас интересует.

Поддержка старых форматов запросов должна сохраниться.



Парсер логов (7)

Теперь добавим поддержку дополнительного параметра запроса в наш QL.
Дополнительный параметр будет отвечать за диапазон дат, которые нас интересуют.
Пример запроса: get ip for user = "Eduard Petrovich Morozko" and date between
"11.12.2013 0:00:00" and "03.01.2014 23:59:59".
Ожидаемый результат: Set<String> с записями: 127.0.0.1 и 146.34.15.5.

Общий формат запроса:
get field1 for field2 = "value1" and date between "after" and "before"
Дополнительным параметром может быть только интервал дат, который нас интересует.

Поддержка старых форматов запросов должна сохраниться.



Парсер логов (7)

Теперь добавим поддержку дополнительного параметра запроса в наш QL.
Дополнительный параметр будет отвечать за диапазон дат, которые нас интересуют.
Пример запроса: get ip for user = "Eduard Petrovich Morozko" and date between
"11.12.2013 0:00:00" and "03.01.2014 23:59:59".
Ожидаемый результат: Set<String> с записями: 127.0.0.1 и 146.34.15.5.

Общий формат запроса:
get field1 for field2 = "value1" and date between "after" and "before"
Дополнительным параметром может быть только интервал дат, который нас интересует.

Поддержка старых форматов запросов должна сохраниться.



Парсер логов (7)

Теперь добавим поддержку дополнительного параметра запроса в наш QL.
Дополнительный параметр будет отвечать за диапазон дат, которые нас интересуют.
Пример запроса: get ip for user = "Eduard Petrovich Morozko" and date between
"11.12.2013 0:00:00" and "03.01.2014 23:59:59".
Ожидаемый результат: Set<String> с записями: 127.0.0.1 и 146.34.15.5.

Общий формат запроса:
get field1 for field2 = "value1" and date between "after" and "before"
Дополнительным параметром может быть только интервал дат, который нас интересует.

Поддержка старых форматов запросов должна сохраниться.



